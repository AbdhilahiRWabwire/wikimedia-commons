plugins {
    id 'com.android.application'
    id 'com.google.devtools.ksp'
    id 'com.github.triplet.play'
    id 'org.gradle.android.cache-fix'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'org.jetbrains.kotlin.plugin.parcelize'
    id 'org.jetbrains.kotlin.plugin.compose'
}
apply from: '../gitutils.gradle'
apply from: "$rootDir/jacoco.gradle"

final androidxAnnotation = "1.8.2"
final androidxCompose = "1.6.8"
final androixComposeCompiler = "1.5.15"
final androidxDatabinding = "8.5.1"
final androidxFragment = "1.8.2"
final androidxLifecycle = "2.8.4"
final androidxPaging = "3.3.2"
final androidxPreference = "1.2.1"
final androidxNavigation = "2.7.7"
final androidxRoom = "2.6.1"
final androidxTest = "1.6.1"
final androidxTestEspresso = "3.6.1"
final androidxTestServices = "1.5.0"
final androidxWork = "2.9.1"
final comGoogleDagger = "2.51.1"
final adapterDelegates4 = "4.3.2"
final comSquareupOkHTTP3 = "4.12.0"
final orgJetBrainsKotlin = "2.0.10"
final orgJetBrainsKotlinxCoroutines = "1.9.0-RC"
final orgJetBrainsKotlinxIO = "0.5.1"
final orgJetBrainsKotlinxSerialization = "1.7.1"
final orgJUnitJupiter = "5.10.3"

def isRunningOnTravisAndIsNotPRBuild = System.getenv("CI") == "true" && file('../play.p12').exists()

if (isRunningOnTravisAndIsNotPRBuild) {
    apply plugin: 'com.github.triplet.play'
}

dependencies {
    // Jetpack Compose
    implementation 'androidx.activity:activity-compose:1.9.1'
    implementation "androidx.compose.animation:animation:$androidxCompose"
    implementation "androidx.compose.compiler:compiler:$androixComposeCompiler"
    implementation "androidx.compose.foundation:foundation:$androidxCompose"
    implementation "androidx.compose.material:material:$androidxCompose"
    implementation 'androidx.compose.material3:material3:1.2.1'
    implementation "androidx.compose.runtime:runtime:$androidxCompose"
    implementation "androidx.compose.ui:ui:$androidxCompose"
    implementation "androidx.compose.ui:ui-text-google-fonts:$androidxCompose"
    implementation "androidx.compose.ui:ui-tooling:$androidxCompose"
    implementation 'androidx.constraintlayout:constraintlayout-compose:1.0.1'
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.fragment:fragment-compose:1.8.2'
    implementation "androidx.lifecycle:lifecycle-runtime-compose:$androidxLifecycle"
    implementation "androidx.lifecycle:lifecycle-viewmodel-compose:$androidxLifecycle"
    implementation "androidx.navigation:navigation-common-ktx:$androidxNavigation"
    implementation "androidx.navigation:navigation-compose:$androidxNavigation"
    implementation "androidx.navigation:navigation-ui-ktx:$androidxNavigation"
    implementation "androidx.paging:paging-compose:$androidxPaging"
    implementation 'com.google.android.material:compose-theme-adapter:1.2.1'
    implementation 'com.google.android.material:compose-theme-adapter-3:1.1.1'
    implementation 'com.google.android.material:compose-theme-adapter-core:1.0.1'
    // Kotlin
    implementation "org.jetbrains.kotlin:kotlin-reflect:$orgJetBrainsKotlin"
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$orgJetBrainsKotlin"
    implementation 'org.jetbrains.kotlinx:kotlinx-collections-immutable:0.3.7'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$orgJetBrainsKotlinxCoroutines"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$orgJetBrainsKotlinxCoroutines"
    implementation 'org.jetbrains.kotlinx:kotlinx-datetime:0.6.0'
    implementation "org.jetbrains.kotlinx:kotlinx-io-bytestring:$orgJetBrainsKotlinxIO"
    implementation "org.jetbrains.kotlinx:kotlinx-io-core:$orgJetBrainsKotlinxIO"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-core:$orgJetBrainsKotlinxSerialization"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-json:$orgJetBrainsKotlinxSerialization"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-properties:$orgJetBrainsKotlinxSerialization"
    implementation 'org.jetbrains.kotlinx:kotlinx-metadata-jvm:0.9.0'
    // Tests
    androidTestImplementation "androidx.compose.ui:ui-test:$androidxCompose"
    androidTestImplementation "androidx.navigation:navigation-testing:$androidxNavigation"
    androidTestImplementation "androidx.test.services:storage:$androidxTestServices"
    androidTestImplementation "androidx.test.services:test-services:$androidxTestServices"
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    testImplementation "org.jetbrains.kotlin:kotlin-test:$orgJetBrainsKotlin"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$orgJetBrainsKotlinxCoroutines"
    testImplementation 'org.jetbrains.kotlinx:lincheck:2.33'

    // Utils
    implementation 'in.yuvi:http.fluent:1.3'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation("com.squareup.okhttp3:okhttp:$comSquareupOkHTTP3") {
        // Forcing dependency versions using force = true on a first-level dependency has been deprecated.
        //  Ref: https://docs.gradle.org/7.5/userguide/upgrading_version_5.html#forced_dependencies
        //force = true //API 19 support
    }
    implementation 'com.squareup.retrofit2:retrofit:2.11.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.11.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.11.0'
    implementation 'com.squareup.okio:okio:3.9.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.21'
    implementation 'com.jakewharton.rxbinding2:rxbinding:2.2.0'
    implementation 'com.jakewharton.rxbinding3:rxbinding-appcompat:3.1.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-appcompat-v7:2.2.0'
    implementation 'com.jakewharton.rxbinding2:rxbinding-design:2.2.0'
    implementation 'com.facebook.fresco:fresco:3.2.0'
    implementation 'org.apache.commons:commons-lang3:3.15.0'

    // UI
    implementation 'fr.avianey.com.viewpagerindicator:library:2.4.1.1@aar'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'
    implementation 'com.github.pedrovgs:renderers:4.1.0'
    implementation 'org.maplibre.gl:android-sdk:11.0.1'
    implementation 'org.maplibre.gl:android-plugin-scalebar-v9:3.0.0'

    implementation 'com.jakewharton.timber:timber:5.0.1'
    implementation 'com.github.deano2390:MaterialShowcaseView:1.3.7'
    implementation 'com.dinuscxj:circleprogressbar:1.3.6'
    implementation 'com.karumi:dexter:6.2.3'

    // Merge Conflict
    implementation 'com.github.chrisbanes:PhotoView:2.0.0'
    implementation 'com.github.pedrovgs:renderers:3.3.3'
    implementation "org.maplibre.gl:android-sdk:$MAPLIBRE_VERSION"
    implementation 'org.maplibre.gl:android-plugin-scalebar-v9:1.0.0'

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.github.deano2390:MaterialShowcaseView:1.2.0'
    implementation "com.google.android.material:material:1.9.0"
    implementation 'com.karumi:dexter:5.0.0'
    // Merge Conflict

    implementation 'androidx.lifecycle:lifecycle-extensions:2.2.0'
    implementation "com.hannesdorfmann:adapterdelegates4-kotlin-dsl-viewbinding:$adapterDelegates4"
    implementation "com.hannesdorfmann:adapterdelegates4-pagination:$adapterDelegates4"
    implementation "androidx.paging:paging-runtime-ktx:$androidxPaging"
    testImplementation "androidx.paging:paging-common-ktx:$androidxPaging"
    implementation "androidx.paging:paging-rxjava2-ktx:$androidxPaging"
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    implementation "com.squareup.okhttp3:okhttp-ws:$comSquareupOkHTTP3"
    
    // Logging
    implementation 'ch.acra:acra-dialog:5.11.3'
    implementation 'ch.acra:acra-mail:5.11.3'
    implementation 'org.slf4j:slf4j-api:2.0.16'
    api('com.github.tony19:logback-android-classic:1.1.1-6') {
        exclude group: 'com.google.android', module: 'android'
    }
    implementation "com.squareup.okhttp3:logging-interceptor:$comSquareupOkHTTP3"

    // Dependency injector
    implementation "com.google.dagger:dagger-android:$comGoogleDagger"
    implementation "com.google.dagger:dagger-android-support:$comGoogleDagger"
    ksp "com.google.dagger:dagger-android-processor:$comGoogleDagger"
    ksp "com.google.dagger:dagger-compiler:$comGoogleDagger"

    //Mocking
    testImplementation 'com.nhaarman.mockitokotlin2:mockito-kotlin:2.2.0'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.mockito:mockito-core:5.12.0'
    testImplementation 'org.powermock:powermock-module-junit4:2.0.9'
    testImplementation 'org.powermock:powermock-api-mockito2:2.0.9'

    // Unit testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.robolectric:robolectric:4.13'
    testImplementation "androidx.test:core:$androidxTest"
    testImplementation "androidx.test:rules:$androidxTest"
    testImplementation "androidx.test:runner:$androidxTest"
    testImplementation 'androidx.test.ext:junit:1.2.1'
    testImplementation "com.squareup.okhttp3:mockwebserver:$comSquareupOkHTTP3"
    testImplementation 'com.jraska.livedata:testing-ktx:1.3.0'
    testImplementation 'androidx.arch.core:core-testing:2.2.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$orgJUnitJupiter"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$orgJUnitJupiter"
    testImplementation 'com.facebook.soloader:soloader:0.11.0'
    debugImplementation("androidx.fragment:fragment-testing:$androidxFragment")
    testImplementation 'commons-io:commons-io:2.16.1'

    // Android testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$androidxTestEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-intents:$androidxTestEspresso"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:$androidxTestEspresso"
    androidTestImplementation "androidx.test:core:$androidxTest"
    androidTestImplementation "androidx.test:rules:$androidxTest"
    androidTestImplementation "androidx.test:runner:$androidxTest"
    androidTestImplementation 'androidx.test.ext:junit:1.2.1'
    androidTestImplementation "androidx.annotation:annotation:$androidxAnnotation"
    androidTestImplementation 'com.squareup.okhttp3:mockwebserver:4.12.0'
    androidTestImplementation 'androidx.test.uiautomator:uiautomator:2.3.0'
    androidTestUtil "androidx.test:orchestrator:$androidxTestServices"

    // Debugging
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.14'

    // Support libraries
    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.browser:browser:1.8.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.exifinterface:exifinterface:1.3.7'
    implementation 'com.simplecityapps:recyclerview-fastscroll:2.0.1'

    //swipe_layout
    implementation 'com.daimajia.swipelayout:library:1.2.0@aar'

    //Room
    implementation "androidx.room:room-runtime:$androidxRoom"
    implementation "androidx.room:room-ktx:$androidxRoom"
    implementation "androidx.room:room-rxjava2:$androidxRoom"
    ksp "androidx.room:room-compiler:$androidxRoom"
    testImplementation 'androidx.arch.core:core-testing:2.2.0'

    // Pref
    // Java language implementation
    implementation "androidx.preference:preference:$androidxPreference"
    // Kotlin
    implementation "androidx.preference:preference-ktx:$androidxPreference"
    //Android Media
    implementation 'com.github.juanitobananas:AndroidMediaUtil:v1.0-1'

    implementation 'androidx.multidex:multidex:2.0.1'

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$androidxWork"
    implementation("androidx.work:work-runtime:$androidxWork")
    testImplementation "androidx.work:work-testing:$androidxWork"

    //Glide
    implementation 'com.github.bumptech.glide:glide:4.16.0'
    ksp 'com.github.bumptech.glide:compiler:4.16.0'
    ksp "androidx.databinding:databinding-compiler:$androidxDatabinding"
    kaptTest "androidx.databinding:databinding-compiler:$androidxDatabinding"
    kaptAndroidTest "androidx.databinding:databinding-compiler:$androidxDatabinding"

    implementation("io.github.coordinates2country:coordinates2country-android:1.6") { exclude group: 'com.google.android', module: 'android' }

    //OSMDroid
    implementation("org.osmdroid:osmdroid-android:6.1.18")
    constraints {
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk7:$orgJetBrainsKotlin") {
            because("kotlin-stdlib-jdk7 is now a part of kotlin-stdlib")
        }
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$orgJetBrainsKotlin") {
            because("kotlin-stdlib-jdk8 is now a part of kotlin-stdlib")
        }
    }
}

task disableAnimations(type: Exec) {
    def adb = "$System.env.ANDROID_HOME/platform-tools/adb"
    commandLine "$adb", 'shell', 'settings', 'put', 'global', 'window_animation_scale', '0'
    commandLine "$adb", 'shell', 'settings', 'put', 'global', 'transition_animation_scale', '0'
    commandLine "$adb", 'shell', 'settings', 'put', 'global', 'animator_duration_scale', '0'
}

project.gradle.taskGraph.whenReady {
    connectedBetaDebugAndroidTest.dependsOn disableAnimations
    connectedProdDebugAndroidTest.dependsOn disableAnimations
}

android {
    composeOptions {
        kotlinCompilerExtensionVersion = "$androixComposeCompiler"
    }

    dataBinding {
        enabled = true
    }

    compileSdkVersion 34

    defaultConfig {
        //applicationId 'fr.free.nrw.commons'

        versionCode 1040
        versionName '5.0.2'
        setProperty("archivesBaseName", "app-commons-v$versionName-" + getBranchName())

        minSdkVersion 21
        targetSdkVersion 34
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        testInstrumentationRunnerArguments clearPackageData: 'true'

        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        vectorDrawables.useSupportLibrary = true
    }
    packagingOptions {
        jniLibs {
            excludes += ['META-INF/androidx.*']
        }
        resources {
            excludes += ['META-INF/androidx.*', 'META-INF/proguard/androidx-annotations.pro']
        }
    }


    testOptions {
        animationsDisabled true

        unitTests {
            returnDefaultValues = true
            includeAndroidResources = true
        }

        unitTests.all {
            jvmArgs '-noverify'
        }
    }

    sourceSets {
        // use kotlin only in tests (for now)
        test.java.srcDirs += 'src/test/kotlin'

        // use main assets and resources in test
        test.assets.srcDirs += 'src/main/assets'
        test.resources.srcDirs += 'src/main/resoures'
    }

    signingConfigs {
        release
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            testProguardFile 'test-proguard-rules.txt'
            signingConfig signingConfigs.debug
            if (isRunningOnTravisAndIsNotPRBuild) {
                signingConfig signingConfigs.release
            }
        }
        debug {
            testCoverageEnabled true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            testProguardFile 'test-proguard-rules.txt'
            versionNameSuffix "-debug-" + getBranchName()
        }
    }

    if (isRunningOnTravisAndIsNotPRBuild) {
        // configure keystore based on env vars in Travis for automated alpha builds
        signingConfigs.release.storeFile = file("../nr-commons.keystore")
        signingConfigs.release.storePassword = System.getenv("keystore_password")
        signingConfigs.release.keyAlias = System.getenv("key_alias")
        signingConfigs.release.keyPassword = System.getenv("key_password")
    }

    configurations.all {
        resolutionStrategy.force "androidx.annotation:annotation:$androidxAnnotation"
        resolutionStrategy.force 'com.jakewharton.timber:timber:5.0.1'
        resolutionStrategy.force "androidx.fragment:fragment:$androidxFragment"
        exclude module: 'okhttp-ws'
    }
    flavorDimensions 'tier'
    productFlavors {
        prod {

            applicationId 'fr.free.nrw.commons'

            buildConfigField "String", "WIKIMEDIA_API_POTD", "\"https://commons.wikimedia.org/w/api.php?action=featuredfeed&feed=potd&feedformat=rss&language=en\""
            buildConfigField "String", "WIKIMEDIA_API_HOST", "\"https://commons.wikimedia.org/w/api.php\""
            buildConfigField "String", "WIKIDATA_API_HOST", "\"https://www.wikidata.org/w/api.php\""
            buildConfigField "String", "WIKIDATA_URL", "\"https://www.wikidata.org\""
            buildConfigField "String", "WIKIMEDIA_FORGE_API_HOST", "\"https://tools.wmflabs.org/\""
            buildConfigField "String", "WIKIMEDIA_CAMPAIGNS_URL", "\"https://raw.githubusercontent.com/commons-app/campaigns/master/campaigns.json\""
            buildConfigField "String", "IMAGE_URL_BASE", "\"https://upload.wikimedia.org/wikipedia/commons\""
            buildConfigField "String", "HOME_URL", "\"https://commons.wikimedia.org/wiki/\""
            buildConfigField "String", "COMMONS_URL", "\"https://commons.wikimedia.org\""
            buildConfigField "String", "WIKIDATA_URL", "\"https://www.wikidata.org\""
            buildConfigField "String", "MOBILE_HOME_URL", "\"https://commons.m.wikimedia.org/wiki/\""
            buildConfigField "String", "SIGNUP_LANDING_URL", "\"https://commons.m.wikimedia.org/w/index.php?title=Special:CreateAccount&returnto=Main+Page&returntoquery=welcome%3Dyes\""
            buildConfigField "String", "SIGNUP_SUCCESS_REDIRECTION_URL", "\"https://commons.m.wikimedia.org/w/index.php?title=Main_Page&welcome=yes\""
            buildConfigField "String", "FORGOT_PASSWORD_URL", "\"https://commons.wikimedia.org/wiki/Special:PasswordReset\""
            buildConfigField "String", "PRIVACY_POLICY_URL", "\"https://github.com/commons-app/commons-app-documentation/blob/master/android/Privacy-policy.md\""
            buildConfigField "String", "ACCOUNT_TYPE", "\"fr.free.nrw.commons\""
            buildConfigField "String", "CONTRIBUTION_AUTHORITY", "\"fr.free.nrw.commons.contributions.contentprovider\""
            buildConfigField "String", "MODIFICATION_AUTHORITY", "\"fr.free.nrw.commons.modifications.contentprovider\""
            buildConfigField "String", "CATEGORY_AUTHORITY", "\"fr.free.nrw.commons.categories.contentprovider\""
            buildConfigField "String", "RECENT_SEARCH_AUTHORITY", "\"fr.free.nrw.commons.explore.recentsearches.contentprovider\""
            buildConfigField "String", "RECENT_LANGUAGE_AUTHORITY", "\"fr.free.nrw.commons.recentlanguages.contentprovider\""
            buildConfigField "String", "BOOKMARK_AUTHORITY", "\"fr.free.nrw.commons.bookmarks.contentprovider\""
            buildConfigField "String", "BOOKMARK_LOCATIONS_AUTHORITY", "\"fr.free.nrw.commons.bookmarks.locations.contentprovider\""
            buildConfigField "String", "BOOKMARK_ITEMS_AUTHORITY", "\"fr.free.nrw.commons.bookmarks.items.contentprovider\""
            buildConfigField "String", "COMMIT_SHA", "\"" + getBuildVersion().toString() + "\""
            buildConfigField "String", "TEST_USERNAME", "\"" + getTestUserName() + "\""
            buildConfigField "String", "TEST_PASSWORD", "\"" + getTestPassword() + "\""
            buildConfigField "String", "DEPICTS_PROPERTY", "\"P180\""
            dimension 'tier'
        }

        beta {
            applicationId 'fr.free.nrw.commons.beta'

            // What values do we need to hit the BETA versions of the site / api ?
            buildConfigField "String", "WIKIMEDIA_API_POTD", "\"https://commons.wikimedia.org/w/api.php?action=featuredfeed&feed=potd&feedformat=rss&language=en\""
            buildConfigField "String", "WIKIMEDIA_API_HOST", "\"https://commons.wikimedia.beta.wmflabs.org/w/api.php\""
            buildConfigField "String", "WIKIDATA_API_HOST", "\"https://www.wikidata.org/w/api.php\""
            buildConfigField "String", "WIKIDATA_URL", "\"https://www.wikidata.org\""
            buildConfigField "String", "WIKIMEDIA_FORGE_API_HOST", "\"https://tools.wmflabs.org/\""
            buildConfigField "String", "WIKIMEDIA_CAMPAIGNS_URL", "\"https://raw.githubusercontent.com/commons-app/campaigns/master/campaigns_beta_active.json\""
            buildConfigField "String", "IMAGE_URL_BASE", "\"https://upload.beta.wmflabs.org/wikipedia/commons\""
            buildConfigField "String", "HOME_URL", "\"https://commons.wikimedia.beta.wmflabs.org/wiki/\""
            buildConfigField "String", "COMMONS_URL", "\"https://commons.wikimedia.beta.wmflabs.org\""
            buildConfigField "String", "WIKIDATA_URL", "\"https://www.wikidata.org\""
            buildConfigField "String", "MOBILE_HOME_URL", "\"https://commons.m.wikimedia.beta.wmflabs.org/wiki/\""
            buildConfigField "String", "SIGNUP_LANDING_URL", "\"https://commons.m.wikimedia.beta.wmflabs.org/w/index.php?title=Special:CreateAccount&returnto=Main+Page&returntoquery=welcome%3Dyes\""
            buildConfigField "String", "SIGNUP_SUCCESS_REDIRECTION_URL", "\"https://commons.m.wikimedia.beta.wmflabs.org/w/index.php?title=Main_Page&welcome=yes\""
            buildConfigField "String", "FORGOT_PASSWORD_URL", "\"https://commons.wikimedia.beta.wmflabs.org/wiki/Special:PasswordReset\""
            buildConfigField "String", "PRIVACY_POLICY_URL", "\"https://github.com/commons-app/commons-app-documentation/blob/master/android/Privacy-policy.md\""
            buildConfigField "String", "ACCOUNT_TYPE", "\"fr.free.nrw.commons.beta\""
            buildConfigField "String", "CONTRIBUTION_AUTHORITY", "\"fr.free.nrw.commons.beta.contributions.contentprovider\""
            buildConfigField "String", "MODIFICATION_AUTHORITY", "\"fr.free.nrw.commons.beta.modifications.contentprovider\""
            buildConfigField "String", "CATEGORY_AUTHORITY", "\"fr.free.nrw.commons.beta.categories.contentprovider\""
            buildConfigField "String", "RECENT_SEARCH_AUTHORITY", "\"fr.free.nrw.commons.beta.explore.recentsearches.contentprovider\""
            buildConfigField "String", "RECENT_LANGUAGE_AUTHORITY", "\"fr.free.nrw.commons.beta.recentlanguages.contentprovider\""
            buildConfigField "String", "BOOKMARK_AUTHORITY", "\"fr.free.nrw.commons.beta.bookmarks.contentprovider\""
            buildConfigField "String", "BOOKMARK_LOCATIONS_AUTHORITY", "\"fr.free.nrw.commons.beta.bookmarks.locations.contentprovider\""
            buildConfigField "String", "BOOKMARK_ITEMS_AUTHORITY", "\"fr.free.nrw.commons.beta.bookmarks.items.contentprovider\""
            buildConfigField "String", "COMMIT_SHA", "\"" + getBuildVersion().toString() + "\""
            buildConfigField "String", "TEST_USERNAME", "\"" + getTestUserName() + "\""
            buildConfigField "String", "TEST_PASSWORD", "\"" + getTestPassword() + "\""
            buildConfigField "String", "DEPICTS_PROPERTY", "\"P245962\""
            dimension 'tier'
        }
    }


    compileOptions {
        // sourceCompatibility JavaVersion.VERSION_17
        // targetCompatibility JavaVersion.VERSION_17
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = "17"
    }

    buildToolsVersion '34.0.0'

    buildFeatures {
        buildConfig = true
        compose = true
        viewBinding true
    }
    namespace 'fr.free.nrw.commons'
    lint {
        abortOnError false
        disable 'MissingTranslation', 'ExtraTranslation'
    }
    ndkVersion '27.0.12077973'
}

String getTestUserName() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['TEST_USER_NAME']
}

String getTestPassword() {
    def propFile = rootProject.file("./local.properties")
    def properties = new Properties()
    properties.load(new FileInputStream(propFile))
    return properties['TEST_USER_PASSWORD']
}

if (isRunningOnTravisAndIsNotPRBuild) {
    play {
        track = "alpha"
        userFraction = 1
        serviceAccountEmail = System.getenv("SERVICE_ACCOUNT_NAME")
        serviceAccountCredentials = file("../play.p12")

        resolutionStrategy = "auto"
        outputProcessor { // this: ApkVariantOutput
            versionNameOverride = "$versionNameOverride.$versionCode"
        }
    }
}
